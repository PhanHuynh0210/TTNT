#include "TaskAccesspointUI.h"

void renderAPIndexPage(WiFiClient &client) {
  unsigned long remainingTime = getAPRemainingTime() / 1000;
  unsigned long minutes = remainingTime / 60;
  unsigned long seconds = remainingTime % 60;

  String currentServer = getCurrentMQTTServer();
  String currentUsername = getCurrentMQTTUsername();
  String currentAccountUsername = getCurrentAccountUsername();

  client.println("HTTP/1.1 200 OK");
  client.println("Content-type:text/html");
  client.println();

  client.println("<!DOCTYPE html><html><head><meta charset='UTF-8'>");
  client.println("<title>ESP32 Configuration</title>");
  client.println("<style>");
  client.println("body{font-family:Arial,sans-serif;background:#f5f5f5;padding:20px;}");
  client.println(".container{max-width:600px;margin:auto;}");
  client.println(".card{background:#fff;padding:20px;border-radius:8px;margin-bottom:20px;box-shadow:0 0 10px rgba(0,0,0,0.1);}");
  client.println("h1{text-align:center;color:#007cba;margin-bottom:30px;}");
  client.println("h2{color:#007cba;margin-bottom:15px;border-bottom:2px solid #007cba;padding-bottom:5px;}");
  client.println("input,select,button{width:100%;padding:12px;margin:8px 0;box-sizing:border-box;border-radius:5px;border:1px solid #ccc;}");
  client.println("button{background:#007cba;color:white;border:none;cursor:pointer;}");
  client.println("button:hover{background:#005a87;}");
  client.println(".note{font-size:12px;color:#666;margin-top:5px;}");
  client.println(".success{background:#d4edda;color:#155724;padding:10px;border-radius:5px;margin-bottom:15px;}");
  client.println(".mqtt-info{background:#e7f3ff;padding:15px;border-radius:5px;margin-bottom:15px;border-left:4px solid #007cba;}");
  client.println(".highlight{background:#fff3cd;border:1px solid #ffeaa7;padding:10px;border-radius:5px;margin-bottom:15px;}");
  client.println(".wifi-item{display:flex;justify-content:space-between;align-items:center;padding:8px 0;border-bottom:1px solid #eee;}");
  client.println(".wifi-name{font-weight:bold;}");
  client.println(".wifi-strength{color:#666;font-size:12px;}");
  client.println(".refresh-btn{background:#28a745;margin-bottom:15px;}");
  client.println(".refresh-btn:hover{background:#218838;}");
  client.println(".loading{text-align:center;color:#666;font-style:italic;}");
  client.println("</style></head><body>");
  client.println("<div class='container'>");
  client.println("<h1>ESP32 Configuration</h1>");

  client.println("<div class='highlight'>");
  client.println("<strong>Th·ªùi gian c√≤n l·∫°i: " + String(minutes) + ":" + String(seconds < 10 ? "0" : "") + String(seconds) + "</strong>");
  client.println("<br><small>Access Point s·∫Ω t·ª± ƒë·ªông t·∫Øt sau 15 ph√∫t</small>");
  client.println("</div>");

  client.println("<div class='card'>");
  client.println("<h2>WiFi Settings</h2>");
  client.println("<button onclick='scanWiFi()' class='refresh-btn'>Qu√©t WiFi</button>");
  client.println("<div id='wifiList'>");
  client.println("<div class='loading'>Nh·∫•n n√∫t 'Qu√©t WiFi' ƒë·ªÉ t√¨m m·∫°ng WiFi</div>");
  client.println("</div>");
  client.println("<form id='wifiForm' style='display:none;'>");
  client.println("<select id='wifiSelect' required>");
  client.println("<option value=''>Ch·ªçn m·∫°ng WiFi...</option>");
  client.println("</select>");
  client.println("<input id='wifiPassword' type='password' placeholder='M·∫≠t kh·∫©u WiFi'>");
  client.println("<button type='submit'>K·∫øt n·ªëi WiFi</button>");
  client.println("</form>");
  client.println("<div id='wifiMessage' class='success' style='display:none;'></div>");
  client.println("</div>");

  client.println("<div class='card'>");
  client.println("<h2>MQTT Settings</h2>");
  client.println("<div class='mqtt-info'>");
  client.println("<strong>C·∫•u h√¨nh hi·ªán t·∫°i:</strong><br>");
  client.println("Server: " + currentServer + "<br>");
  client.println("Username: " + (currentUsername.length() > 0 ? currentUsername : "Ch∆∞a c·∫•u h√¨nh"));
  client.println("</div>");
  client.println("<form id='mqttForm' onsubmit='submitMQTT(event)'>");
  client.println("<input id='mqttServer' placeholder='MQTT Server (vd: m811669b.ala.asia-southeast1.emqxsl.com' required>");
  client.println("<div class='note'>M·∫∑c ƒë·ªãnh: m811669b.ala.asia-southeast1.emqxsl.com (port 8883)</div>");
  client.println("<input id='mqttUsername' placeholder='MQTT Username' required>");
  client.println("<input id='mqttKey' type='password' placeholder='MQTT Key/Password' required>");
  client.println("<button type='submit'>Save MQTT Settings</button>");
  client.println("</form>");
  client.println("<div id='mqttMessage' class='success' style='display:none;'>ƒê√£ l∆∞u c·∫•u h√¨nh MQTT th√†nh c√¥ng!</div>");
  client.println("</div>");

  client.println("<div class='card'>");
  client.println("<h2>Account Settings</h2>");
  client.println("<div class='account-info'>");
  client.println("<strong>T√†i kho·∫£n hi·ªán t·∫°i:</strong><br>");
  client.println("Username: " + (currentAccountUsername.length() > 0 ? currentAccountUsername : "Ch∆∞a c·∫•u h√¨nh"));
  client.println("</div>");
  client.println("<form id='accountForm' onsubmit='submitAccount(event)'>");
  client.println("<input id='accountUsername' placeholder='T√†i kho·∫£n' required>");
  client.println("<input id='accountPassword' type='password' placeholder='M·∫≠t kh·∫©u' required>");
  client.println("<button type='submit'>L∆∞u T√†i Kho·∫£n</button>");
  client.println("</form>");
  client.println("<div id='accountMessage' class='success' style='display:none;'>ƒê√£ l∆∞u t√†i kho·∫£n th√†nh c√¥ng!</div>");
  client.println("</div>");

  client.println("<div class='card'>");
  client.println("<h2>Qu·∫£n l√Ω Access Point</h2>");
  client.println("<p>Khi ƒë√£ c·∫•u h√¨nh xong, b·∫°n c√≥ th·ªÉ t·∫Øt Access Point:</p>");
  client.println("<a href='/stop' class='button' style='background:#dc3545;color:white;padding:12px;text-decoration:none;border-radius:5px;display:inline-block;'>üõë T·∫Øt Access Point</a>");
  client.println("<p><small>Ho·∫∑c ch·ªù 15 ph√∫t ƒë·ªÉ t·ª± ƒë·ªông t·∫Øt</small></p>");
  client.println("</div>");

  client.println("<script>");
  client.println("function scanWiFi() {");
  client.println("  const wifiList = document.getElementById('wifiList');");
  client.println("  wifiList.innerHTML = '<div class=\"loading\">ƒêang qu√©t WiFi...</div>';");
  client.println("  fetch('/scan')");
  client.println("    .then(res => res.json())");
  client.println("    .then(networks => {");
  client.println("      if (networks.length === 0) {");
  client.println("        wifiList.innerHTML = '<div class=\"loading\">Kh√¥ng t√¨m th·∫•y m·∫°ng WiFi n√†o</div>';");
  client.println("        return;");
  client.println("      }");
  client.println("      let html = '<h3>M·∫°ng WiFi t√¨m th·∫•y:</h3>';");
  client.println("      networks.forEach(network => {");
  client.println("        const strength = network.rssi > -50 ? 'M·∫°nh' : network.rssi > -70 ? 'Trung b√¨nh' : 'Y·∫øu';");
  client.println("        const strengthColor = network.rssi > -50 ? '#28a745' : network.rssi > -70 ? '#ffc107' : '#dc3545';");
  client.println("        html += `<div class=\"wifi-item\">`;");
  client.println("        html += `<span class=\"wifi-name\">${network.ssid}</span>`;");
  client.println("        html += `<span class=\"wifi-strength\" style=\"color:${strengthColor}\">${strength} (${network.rssi}dBm)</span>`;");
  client.println("        html += `</div>`;");
  client.println("      });");
  client.println("      wifiList.innerHTML = html;");
  client.println("      const select = document.getElementById('wifiSelect');");
  client.println("      select.innerHTML = '<option value=\"\">Ch·ªçn m·∫°ng WiFi...</option>';");
  client.println("      networks.forEach(network => {");
  client.println("        const option = document.createElement('option');");
  client.println("        option.value = network.ssid;");
  client.println("        option.textContent = `${network.ssid} (${network.rssi}dBm)`;");
  client.println("        select.appendChild(option);");
  client.println("      });");
  client.println("      document.getElementById('wifiForm').style.display = 'block';");
  client.println("    })");
  client.println("    .catch(() => {");
  client.println("      wifiList.innerHTML = '<div class=\"loading\" style=\"color:#dc3545;\">L·ªói khi qu√©t WiFi</div>';");
  client.println("    });");
  client.println("}");
  client.println("document.getElementById('wifiForm').addEventListener('submit', function(e) {");
  client.println("  e.preventDefault();");
  client.println("  const ssid = document.getElementById('wifiSelect').value;");
  client.println("  const password = document.getElementById('wifiPassword').value;");
  client.println("  if (!ssid) { alert('Vui l√≤ng ch·ªçn m·∫°ng WiFi'); return; }");
  client.println("  const url = `/wifi?ssid=${encodeURIComponent(ssid)}&pass=${encodeURIComponent(password)}`;");
  client.println("  window.location.href = url;");
  client.println("});");
  client.println("function submitMQTT(event) {");
  client.println("  event.preventDefault();");
  client.println("  const server = document.getElementById('mqttServer').value;");
  client.println("  const username = document.getElementById('mqttUsername').value;");
  client.println("  const key = document.getElementById('mqttKey').value;");
  client.println("  const url = `/mqtt?server=${encodeURIComponent(server)}&username=${encodeURIComponent(username)}&key=${encodeURIComponent(key)}`;");
  client.println("  fetch(url).then(res => res.text()).then(text => {");
  client.println("    if (text.trim() === 'SAVED') { const msg = document.getElementById('mqttMessage'); msg.style.display = 'block'; setTimeout(() => msg.style.display = 'none', 3000); }");
  client.println("  });");
  client.println("}");
  client.println("function submitAccount(event) {");
  client.println("  event.preventDefault();");
  client.println("  const username = document.getElementById('accountUsername').value;");
  client.println("  const password = document.getElementById('accountPassword').value;");
  client.println("  const url = `/account?username=${encodeURIComponent(username)}&password=${encodeURIComponent(password)}`;");
  client.println("  fetch(url).then(res => res.text()).then(text => {");
  client.println("    if (text.trim() === 'SAVED') { const msg = document.getElementById('accountMessage'); msg.style.display = 'block'; setTimeout(() => msg.style.display = 'none', 3000); }");
  client.println("  });");
  client.println("}");
  client.println("let remainingSeconds = " + String(remainingTime) + ";");
  client.println("setInterval(() => { remainingSeconds--; if (remainingSeconds <= 0) { document.body.innerHTML = '<div style=\"text-align:center;padding:50px;\"><h2>Access Point ƒë√£ t·ª± ƒë·ªông t·∫Øt</h2><p>ESP32 s·∫Ω kh·ªüi ƒë·ªông l·∫°i...</p></div>'; } else { const minutes = Math.floor(remainingSeconds / 60); const seconds = remainingSeconds % 60; const timeDisplay = document.querySelector('.highlight strong'); if (timeDisplay) { timeDisplay.textContent = 'Th·ªùi gian c√≤n l·∫°i: ' + minutes + ':' + (seconds < 10 ? '0' : '') + seconds; } } }, 1000);");
  client.println("</script>");
  client.println("</div></body></html>");
  client.println();
}

